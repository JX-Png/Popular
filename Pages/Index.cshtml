@page
@model PopularBookstore.Pages.IndexModel
@using System
@{
    ViewData["Title"] = "Homepage";
}

<style>

    .book-gallery {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 25px;
        padding: 25px;
        background-color: #fff;
    }

    .book-card {
        border: 2px solid #ffe0e0;
        border-radius: 8px;
        padding: 15px;
        text-align: center;
        background-color: #fff9f9;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out; 
    }

        /* Hover effect for the book card */
        .book-card:hover {
            transform: translateY(-5px) scale(1.02);
            box-shadow: 0 8px 15px rgba(0,0,0,0.15);
        }

        .book-card h4 {
            font-size: 1.1em;
            margin: 10px 0 5px 0;
            min-height: 40px;
        }

        .book-card .author, .book-card .price {
            font-size: 0.9em;
            color: #555;
            margin-bottom: 8px;
        }

        .book-card .price {
            font-weight: bold;
            color: #28a745;
        }

    .book-image-placeholder {
        width: 100%;
        height: 200px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 15px;
        overflow: hidden;
    }

        .book-image-placeholder img {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
        }

    .book-actions {
        display: flex;
        justify-content: center;
        gap: 5px;
        margin-top: auto; /* Pushes buttons to the bottom */
    }

        .book-actions .btn {
            background-color: #f0f0f0;
            border: 1px solid #ccc;
            padding: 8px 15px;
            margin: 0;
            border-radius: 4px;
            text-decoration: none;
            color: #333;
            cursor: pointer;
            font-size: 0.9em;
            flex: 1;
            text-align: center;
        }

            .book-actions .btn:hover {
                background-color: #e0e0e0;
            }

        .book-actions form {
            flex: 1;
            display: flex;
        }

            .book-actions form .btn {
                width: 100%;
            }

    /* --- Modal Popup Styles --- */
    .modal {
        display: none; /* Hidden by default */
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0,0,0,0.5); /* Black background with opacity */
    }

    .modal-content {
        background-color: #fff9f9;
        border: 2px solid #ffe0e0;
        border-radius: 15px;
        margin: 5% auto;
        padding: 25px;
        width: 80%;
        max-width: 800px;
        position: relative;
        box-shadow: 0 5px 15px rgba(0,0,0,0.3);
        animation: fadeIn 0.3s;
    }

    .close-button {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
    }

        .close-button:hover, .close-button:focus {
            color: black;
        }

    .modal-body {
        display: flex;
        gap: 25px;
        margin-top: 20px;
    }

    .modal-image {
        flex: 0 0 40%;
    }

        .modal-image img {
            width: 100%;
            height: auto;
            object-fit: contain;
        }

    .modal-info {
        flex: 1;
    }

        .modal-info h2 {
            margin-top: 0;
        }

        .modal-info p {
            margin: 8px 0;
        }

        .modal-info .description {
            margin-top: 15px;
            font-style: italic;
        }

    .modal-add-to-cart {
        margin-top: 20px;
    }

        .modal-add-to-cart .btn {
            padding: 10px 20px;
            font-size: 1em;
            background-color: #28a745;
            color: white;
            border: none;
        }

    @@keyframes fadeIn {
        from {
            opacity: 0
        }

        to {
            opacity: 1
        }
    }
</style>

<partial name="_Header" />

<div class="book-gallery">
    @foreach (var book in Model.Books)
    {
        <div class="book-card">
            <div>
                <div class="book-image-placeholder">
                    @if (book.ImageData != null && book.ImageMimeType != null)
                    {
                        <img src="data:@book.ImageMimeType;base64,@Convert.ToBase64String(book.ImageData)" alt="@book.Title" />
                    }
                    else if (!string.IsNullOrEmpty(book.ImageUrl))
                    {
                        <img src="@book.ImageUrl" alt="@book.Title" />
                    }
                </div>
                <h4>@book.Title</h4>
                <div class="author">By @book.Author</div>
                <div class="price">@book.Price.ToString("C")</div>
            </div>
            <div class="book-actions">
                <button class="btn view-info-btn"
                        data-title="@book.Title"
                        data-author="@book.Author"
                        data-price="@book.Price.ToString("C")"
                        data-genre="@book.Genre"
                        data-description="@book.Description"
                        data-image-src="@(book.ImageData != null ? $"data:{book.ImageMimeType};base64,{Convert.ToBase64String(book.ImageData)}" : book.ImageUrl)"
                        data-cart-url="@Url.Page("/Cart", "AddToCart", new { id = book.Id })">
                    View Info
                </button>
                <form method="post" asp-page-handler="AddToCart">
                    <input type="hidden" name="id" value="@book.Id" />
                    <button type="submit" class="btn">Add to cart</button>
                </form>
            </div>
        </div>
    }
</div>

<!-- The Modal -->
<div id="book-details-modal" class="modal">
    <div class="modal-content">
        <span class="close-button">&times;</span>
        <div class="modal-body">
            <div class="modal-image">
                <img id="modal-book-image" src="" alt="Book Cover" />
            </div>
            <div class="modal-info">
                <h2 id="modal-book-title"></h2>
                <p><strong>Author:</strong> <span id="modal-book-author"></span></p>
                <p><strong>Price:</strong> <span id="modal-book-price"></span></p>
                <p><strong>Genre:</strong> <span id="modal-book-genre"></span></p>
                <p class="description" id="modal-book-description"></p>
                <div class="modal-add-to-cart">
                    <a id="modal-add-to-cart-link" href="#" class="btn">Add to Cart</a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const modal = document.getElementById('book-details-modal');
            const closeButton = document.querySelector('.close-button');
            const viewInfoButtons = document.querySelectorAll('.view-info-btn');

            // Function to open the modal and populate it with data
            function openModal(data) {
                document.getElementById('modal-book-image').src = data.imageSrc;
                document.getElementById('modal-book-title').textContent = data.title;
                document.getElementById('modal-book-author').textContent = data.author;
                document.getElementById('modal-book-price').textContent = data.price;
                document.getElementById('modal-book-genre').textContent = data.genre;
                document.getElementById('modal-book-description').textContent = data.description;
                document.getElementById('modal-add-to-cart-link').href = data.cartUrl;
                modal.style.display = 'block';
            }

            // Add click event to all "View Info" buttons
            viewInfoButtons.forEach(button => {
                button.addEventListener('click', function () {
                    const bookData = {
                        title: this.dataset.title,
                        author: this.dataset.author,
                        price: this.dataset.price,
                        genre: this.dataset.genre,
                        description: this.dataset.description,
                        imageSrc: this.dataset.imageSrc,
                        cartUrl: this.dataset.cartUrl
                    };
                    openModal(bookData);
                });
            });

            // Function to close the modal
            function closeModal() {
                modal.style.display = 'none';
            }

            // Event listeners for closing the modal
            closeButton.addEventListener('click', closeModal);
            window.addEventListener('click', function (event) {
                if (event.target == modal) {
                    closeModal();
                }
            });
        });
    </script>
}